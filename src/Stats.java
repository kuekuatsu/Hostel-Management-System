
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Point;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormatSymbols;
import java.time.LocalDate;
import java.time.YearMonth;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ridisha Shetty
 */
public class Stats extends javax.swing.JFrame {

    /**
     * Creates new form Stats
     */
    public Stats() {
        initComponents();
        Point center = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        int windowWidth = this.getWidth();
        int windowHeight = this.getHeight();
        this.setBounds(center.x - windowWidth / 2, center.y - windowHeight / 2, windowWidth,
            windowHeight);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        leftGo = new javax.swing.JLabel();
        rightGo = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pane = new javax.swing.JPanel();
        title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(238, 255, 237));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(238, 255, 237));

        leftGo.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        leftGo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        leftGo.setText("<");
        leftGo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftGoMouseClicked(evt);
            }
        });
        leftGo.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                leftGoComponentShown(evt);
            }
        });

        rightGo.setFont(new java.awt.Font("Tw Cen MT Condensed", 0, 24)); // NOI18N
        rightGo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rightGo.setText(">");
        rightGo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rightGoMouseClicked(evt);
            }
        });

        home.setPreferredSize(new java.awt.Dimension(25, 25));
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(244, 244, 244));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "STATS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        pane.setBackground(new java.awt.Color(244, 244, 244));

        javax.swing.GroupLayout paneLayout = new javax.swing.GroupLayout(pane);
        pane.setLayout(paneLayout);
        paneLayout.setHorizontalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        paneLayout.setVerticalGroup(
            paneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 247, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addComponent(leftGo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(rightGo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(103, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leftGo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rightGo, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String url = "jdbc:sqlserver://192.168.0.98:1433;databaseName=hostel;integratedSecurity=true";
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        ImageIcon icon=new ImageIcon("images/home.png");
        Image img=icon.getImage();
        Image newimg=img.getScaledInstance(20, 20, java.awt.Image.SCALE_SMOOTH);
        ImageIcon finale=new ImageIcon(newimg);
        home.setIcon(finale);
        
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url);
            Statement stmt=con.createStatement();
            
            String fDate="01";
            String month=Integer.toString(LocalDate.now().getMonthValue());
            int year=LocalDate.now().getYear();
            
        //Max date in a month    
            YearMonth yearMonthObject = YearMonth.of(year, LocalDate.now().getMonthValue());
            int daysInMonth = yearMonthObject.lengthOfMonth();
            int lDate=daysInMonth;
        
            if(month.length()==1)
            {
                month="0"+month;
            }
            Font f=new Font("Tw Cen MT", Font.PLAIN, 16);
            title.setText(Integer.parseInt(month)+"/"+year);
            title.setFont(f);
            
            int sum=0;
            int tot=0;
            String get="SELECT * FROM profLoss WHERE months='"+month+"' AND years='"+year+"'";
            ResultSet r_get=stmt.executeQuery(get);
            if(r_get.next())
            {
                sum=r_get.getInt("revenue");
                tot=r_get.getInt("expense");
            }
            ///////// Bar Design
            if(sum!=0 || tot!=0)
            {
                pane.setLayout(new BoxLayout(pane, BoxLayout.X_AXIS));
                pane.add(Box.createHorizontalGlue());

                JPanel contain1=new JPanel();
                JPanel contain2=new JPanel();
                contain1.setLayout(new BoxLayout(contain1, BoxLayout.Y_AXIS));
                contain1.add(Box.createHorizontalGlue());
                contain2.setLayout(new BoxLayout(contain2, BoxLayout.Y_AXIS));
                contain2.add(Box.createHorizontalGlue());

                int revenue=sum/2000;
                int expense=tot/2000;

                JPanel jp1=new JPanel();
                jp1.setBackground(new Color(0,102,0));
                if(revenue<10)
                {
                    jp1.setMaximumSize(new Dimension( 130, 10 ));
                }
                else
                {
                    jp1.setMaximumSize(new Dimension( 130, revenue ));
                }
                jp1.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb1=new JLabel(Integer.toString(sum));
                lb1.setForeground(new Color(0,102,0));
                contain1.setBackground(new Color(244,244,244));
                contain1.add(lb1);
                contain1.add(jp1);
                contain1.add(new JLabel("REVENUE"));

                JPanel space=new JPanel();
                space.setBackground(new Color(244,244,244));
                space.setMaximumSize(new Dimension( 20, 20 ));

                JPanel jp2=new JPanel();
                jp2.setBackground(Color.RED);
                if(expense<10)
                {
                    jp2.setMaximumSize(new Dimension( 130, 10 ));
                }
                else
                {
                    jp2.setMaximumSize(new Dimension( 130, expense ));
                }
                jp2.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb2=new JLabel(Integer.toString(tot));
                lb2.setForeground(Color.red);
                contain2.setBackground(new Color(244,244,244));
                contain2.add(lb2);
                contain2.add(jp2);
                contain2.add(new JLabel("EXPENSE"));

                contain1.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                contain1.setAlignmentX(Component.CENTER_ALIGNMENT);
                pane.add(space);
                pane.add(contain1, BorderLayout.CENTER);
                pane.add(space);
                contain2.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                pane.add(contain2, BorderLayout.CENTER);

                pane.revalidate();
            }
        
            else
            {
                JPanel p=new JPanel();
                p.setBackground(new Color(244,244,244));
                
                JLabel alert=new JLabel("No records available");
                alert.setFont(f);
                p.add(alert, BorderLayout.CENTER);
                pane.add(p);
            }
            
        /*    String start=year+"-"+month+"-"+fDate;
            String last=year+"-"+month+"-"+lDate;
            LocalDate lStart=LocalDate.parse(start);
            LocalDate lLast=LocalDate.parse(last);
            
            int sum=0;
            String op="SELECT * FROM resident WHERE name is not null";
            ResultSet rop=stmt.executeQuery(op);
            while(rop.next())
            {
             //check if revenue only for people joined in or before the month
                LocalDate din=rop.getDate("joinFrom").toLocalDate();
                if(din.isBefore(lLast) || din.isEqual(lLast))
                {
                    //System.out.println(din);
                    int food=0;
                    if(rop.getString("food").equals("veg"))
                    {   food=2000;  sum+=food;  }
                    else if(rop.getString("food").equals("nonveg"))
                    {   food=3500;  sum+=food;  }
                    else
                    {   food=0;     sum+=food;  }
                    
                    if(rop.getInt("floorNo")<4)
                    {   sum+=15000; }
                    else if(rop.getInt("floorNo")==4)
                    {   sum+=20000; }
                    else if(rop.getInt("floorNo")==5)
                    {   sum+=32000; }
                    else if(rop.getInt("floorNo")>5)
                    {   sum+=64000; }
                }
            }
            //System.out.println("Revenue: "+sum);    //revenue in current month includes everyone joined this month and before
            
            String exp="select sum(price) as monthExp from inventory where month(buyDate)='"+month+"'";
            int tot=0;
            ResultSet rexp=stmt.executeQuery(exp);
            if(rexp.next())
            {   tot=rexp.getInt("monthExp");    }
            //System.out.println("Expense: "+tot);  //expense only for current month
            
            ///////// Bar Design
            if(sum!=0 || tot!=0)
            {
                pane.setLayout(new BoxLayout(pane, BoxLayout.X_AXIS));
                pane.add(Box.createHorizontalGlue());

                JPanel contain1=new JPanel();
                JPanel contain2=new JPanel();
                contain1.setLayout(new BoxLayout(contain1, BoxLayout.Y_AXIS));
                contain1.add(Box.createHorizontalGlue());
                contain2.setLayout(new BoxLayout(contain2, BoxLayout.Y_AXIS));
                contain2.add(Box.createHorizontalGlue());

                int revenue=sum/3000;
                int expense=tot/3000;

                JPanel jp1=new JPanel();
                jp1.setBackground(new Color(0,102,0));
                jp1.setMaximumSize(new Dimension( 150, revenue ));
                jp1.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb1=new JLabel(Integer.toString(sum));
                lb1.setForeground(new Color(0,102,0));
                contain1.setBackground(new Color(244,244,244));
                contain1.add(lb1);
                contain1.add(jp1);
                contain1.add(new JLabel("REVENUE"));

                JPanel space=new JPanel();
                space.setBackground(new Color(244,244,244));
                space.setMaximumSize(new Dimension( 20, 20 ));

                JPanel jp2=new JPanel();
                jp2.setBackground(Color.RED);
                jp2.setMaximumSize(new Dimension( 150, expense ));
                jp2.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb2=new JLabel(Integer.toString(tot));
                lb2.setForeground(Color.red);
                contain2.setBackground(new Color(244,244,244));
                contain2.add(lb2);
                contain2.add(jp2);
                contain2.add(new JLabel("EXPENSE"));

                contain1.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                contain1.setAlignmentX(Component.CENTER_ALIGNMENT);
                pane.add(space);
                pane.add(contain1);
                pane.add(space);
                contain2.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                pane.add(contain2);

                pane.revalidate();
            }
        
            else
            {
                JPanel p=new JPanel();
                p.setBackground(new Color(244,244,244));
                Font f=new Font("Tw Cen MT Condensed", Font.PLAIN, 18);
                JLabel alert=new JLabel("No records available");
                alert.setFont(f);
                p.add(alert, BorderLayout.CENTER);
                pane.add(p);
            } */
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formComponentShown

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        new Dashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void leftGoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_leftGoComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_leftGoComponentShown

    private void leftGoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftGoMouseClicked
        // TODO add your handling code here:
        pane.removeAll();
        pane.updateUI();
        String current[]=title.getText().split("/");
        
        String month;
        int year;
        if(Integer.parseInt(current[0])>1)
        {
            month=Integer.toString(Integer.parseInt(current[0])-1);
            year=Integer.parseInt(current[1]);
        }
        else
        {
            month=Integer.toString(12);
            year=Integer.parseInt(current[1])-1;
        }
        Font f=new Font("Tw Cen MT", Font.PLAIN, 16);
        title.setText(Integer.parseInt(month)+"/"+year);
        title.setFont(f);
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url);
            Statement stmt=con.createStatement();
            
            int sum=0;
            int tot=0;
            String get="SELECT * FROM profLoss WHERE months='"+month+"' AND years='"+year+"'";
            ResultSet r_get=stmt.executeQuery(get);
            if(r_get.next())
            {
                sum=r_get.getInt("revenue");
                tot=r_get.getInt("expense");
            }
            ///////// Bar Design
            if(sum!=0 || tot!=0)
            {
                pane.setLayout(new BoxLayout(pane, BoxLayout.X_AXIS));
                pane.add(Box.createHorizontalGlue());

                JPanel contain1=new JPanel();
                JPanel contain2=new JPanel();
                contain1.setLayout(new BoxLayout(contain1, BoxLayout.Y_AXIS));
                contain1.add(Box.createHorizontalGlue());
                contain2.setLayout(new BoxLayout(contain2, BoxLayout.Y_AXIS));
                contain2.add(Box.createHorizontalGlue());

                int revenue=sum/2000;
                int expense=tot/2000;

                JPanel jp1=new JPanel();
                jp1.setBackground(new Color(0,102,0));
                if(revenue<10)
                {
                    jp1.setMaximumSize(new Dimension( 130, 10 ));
                }
                else
                {
                    jp1.setMaximumSize(new Dimension( 130, revenue ));
                }
                jp1.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb1=new JLabel(Integer.toString(sum));
                lb1.setForeground(new Color(0,102,0));
                contain1.setBackground(new Color(244,244,244));
                contain1.add(lb1);
                contain1.add(jp1);
                contain1.add(new JLabel("REVENUE"));

                JPanel space=new JPanel();
                space.setBackground(new Color(244,244,244));
                space.setMaximumSize(new Dimension( 20, 20 ));

                JPanel jp2=new JPanel();
                jp2.setBackground(Color.RED);
                if(expense<10)
                {
                    jp2.setMaximumSize(new Dimension( 130, 10 ));
                }
                else
                {
                    jp2.setMaximumSize(new Dimension( 130, expense ));
                }
                jp2.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb2=new JLabel(Integer.toString(tot));
                lb2.setForeground(Color.red);
                contain2.setBackground(new Color(244,244,244));
                contain2.add(lb2);
                contain2.add(jp2);
                contain2.add(new JLabel("EXPENSE"));

                contain1.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                contain1.setAlignmentX(Component.CENTER_ALIGNMENT);
                pane.add(space);
                pane.add(contain1);
                pane.add(space);
                contain2.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                pane.add(contain2);

                pane.revalidate();
            }
        
            else
            {
                JPanel p=new JPanel();
                p.setBackground(new Color(244,244,244));
                JLabel alert=new JLabel("No records available");
                alert.setFont(f);
                p.add(alert, BorderLayout.CENTER);
                pane.add(p);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_leftGoMouseClicked

    private void rightGoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightGoMouseClicked
        // TODO add your handling code here:
        pane.removeAll();
        pane.updateUI();
        String current[]=title.getText().split("/");
        
        String month;
        int year;
        if(Integer.parseInt(current[0])<12)
        {
            month=Integer.toString(Integer.parseInt(current[0])+1);
            year=Integer.parseInt(current[1]);
        }
        else
        {
            month=Integer.toString(1);
            year=Integer.parseInt(current[1])+1;
        }
        Font f=new Font("Tw Cen MT", Font.PLAIN, 16);
        title.setText(Integer.parseInt(month)+"/"+year);
        title.setFont(f);
        
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url);
            Statement stmt=con.createStatement();
            
            int sum=0;
            int tot=0;
            String get="SELECT * FROM profLoss WHERE months='"+month+"' AND years='"+year+"'";
            ResultSet r_get=stmt.executeQuery(get);
            if(r_get.next())
            {
                sum=r_get.getInt("revenue");
                tot=r_get.getInt("expense");
            }
            ///////// Bar Design
            if(sum!=0 || tot!=0)
            {
                pane.setLayout(new BoxLayout(pane, BoxLayout.X_AXIS));
                pane.add(Box.createHorizontalGlue());

                JPanel contain1=new JPanel();
                JPanel contain2=new JPanel();
                contain1.setLayout(new BoxLayout(contain1, BoxLayout.Y_AXIS));
                contain1.add(Box.createHorizontalGlue());
                contain2.setLayout(new BoxLayout(contain2, BoxLayout.Y_AXIS));
                contain2.add(Box.createHorizontalGlue());

                int revenue=sum/2000;
                int expense=tot/2000;

                JPanel jp1=new JPanel();
                jp1.setBackground(new Color(0,102,0));
                if(revenue<10)
                {
                    jp1.setMaximumSize(new Dimension( 130, 10 ));
                }
                else
                {
                    jp1.setMaximumSize(new Dimension( 130, revenue ));
                }
                jp1.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb1=new JLabel(Integer.toString(sum));
                lb1.setForeground(new Color(0,102,0));
                contain1.setBackground(new Color(244,244,244));
                contain1.add(lb1);
                contain1.add(jp1);
                contain1.add(new JLabel("REVENUE"));

                JPanel space=new JPanel();
                space.setBackground(new Color(244,244,244));
                space.setMaximumSize(new Dimension( 20, 20 ));

                JPanel jp2=new JPanel();
                jp2.setBackground(Color.RED);
                
                if(expense<10)
                {
                    jp2.setMaximumSize(new Dimension( 130, 10 ));
                }
                else
                {
                    jp2.setMaximumSize(new Dimension( 130, expense ));
                }
                jp2.setAlignmentY(Component.TOP_ALIGNMENT);
                JLabel lb2=new JLabel(Integer.toString(tot));
                lb2.setForeground(Color.red);
                contain2.setBackground(new Color(244,244,244));
                contain2.add(lb2);
                contain2.add(jp2);
                contain2.add(new JLabel("EXPENSE"));

                contain1.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                contain1.setAlignmentX(Component.CENTER_ALIGNMENT);
                pane.add(space);
                pane.add(contain1);
                pane.add(space);
                contain2.setAlignmentY(Component.BOTTOM_ALIGNMENT);
                pane.add(contain2);

                pane.revalidate();
            }
        
            else
            {
                JPanel p=new JPanel();
                p.setBackground(new Color(244,244,244));
                JLabel alert=new JLabel("No records available");
                alert.setFont(f);
                p.add(alert, BorderLayout.CENTER);
                pane.add(p);
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_rightGoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stats.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stats().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel home;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel leftGo;
    private javax.swing.JPanel pane;
    private javax.swing.JLabel rightGo;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
