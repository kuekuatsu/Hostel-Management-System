
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Point;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ridisha Shetty
 */
public class Staff extends javax.swing.JFrame {

    /**
     * Creates new form Staff
     */
    public Staff() {
        initComponents();
        Point center = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        int windowWidth = this.getWidth();
        int windowHeight = this.getHeight();
        this.setBounds(center.x - windowWidth / 2, center.y - windowHeight / 2, windowWidth,
            windowHeight);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pagePanel = new javax.swing.JPanel();
        profile = new javax.swing.JLabel();
        dashboard = new javax.swing.JLabel();
        routine = new javax.swing.JLabel();
        room = new javax.swing.JLabel();
        rent = new javax.swing.JLabel();
        kitchen = new javax.swing.JLabel();
        report = new javax.swing.JLabel();
        bill = new javax.swing.JLabel();
        fee = new javax.swing.JLabel();
        staff = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        remBtn = new javax.swing.JButton();
        updBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        srcBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        desigField = new javax.swing.JTextField();
        dptBox = new javax.swing.JComboBox();
        foodLabel = new javax.swing.JLabel();
        foodLabel1 = new javax.swing.JLabel();
        depositLabel = new javax.swing.JLabel();
        depositLabel1 = new javax.swing.JLabel();
        salField = new javax.swing.JTextField();
        foodLabel2 = new javax.swing.JLabel();
        amtDue = new javax.swing.JTextField();
        dueLab = new javax.swing.JLabel();
        lastLab = new javax.swing.JLabel();
        lastDate = new javax.swing.JLabel();
        payLab = new javax.swing.JLabel();
        payField = new javax.swing.JTextField();
        foodLabel5 = new javax.swing.JLabel();
        dd = new javax.swing.JTextField();
        mm = new javax.swing.JTextField();
        yy = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        payBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pagePanel.setBackground(new java.awt.Color(238, 255, 237));

        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });

        dashboard.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        dashboard.setForeground(new java.awt.Color(0, 51, 255));
        dashboard.setText("Dashboard");
        dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardMouseClicked(evt);
            }
        });

        routine.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        routine.setForeground(new java.awt.Color(0, 51, 255));
        routine.setText("Routine Check");
        routine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                routineMouseClicked(evt);
            }
        });

        room.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        room.setForeground(new java.awt.Color(0, 51, 255));
        room.setText("Room Distribution");
        room.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomMouseClicked(evt);
            }
        });

        rent.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        rent.setForeground(new java.awt.Color(0, 51, 255));
        rent.setText("Rent Payment");
        rent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rentMouseClicked(evt);
            }
        });

        kitchen.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        kitchen.setForeground(new java.awt.Color(0, 51, 255));
        kitchen.setText("Kitchen Materials");
        kitchen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kitchenMouseClicked(evt);
            }
        });

        report.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        report.setForeground(new java.awt.Color(0, 51, 255));
        report.setText("Add Reports");
        report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportMouseClicked(evt);
            }
        });

        bill.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        bill.setForeground(new java.awt.Color(0, 51, 255));
        bill.setText("Pay Bill");
        bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billMouseClicked(evt);
            }
        });

        fee.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        fee.setForeground(new java.awt.Color(0, 51, 255));
        fee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fee.setText("Fee Details");
        fee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feeMouseClicked(evt);
            }
        });

        staff.setFont(new java.awt.Font("Yu Gothic", 1, 12)); // NOI18N
        staff.setText("Staff Manage");
        staff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 0), null, null, new java.awt.Color(0, 102, 0)));
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Staff Management");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        addBtn.setText("Add Staff");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        remBtn.setText("Remove");
        remBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remBtnActionPerformed(evt);
            }
        });

        updBtn.setText("Update");
        updBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        srcBtn.setText("Search");
        srcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcBtnActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        idField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idFieldActionPerformed(evt);
            }
        });
        idField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idFieldKeyReleased(evt);
            }
        });

        desigField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        desigField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desigFieldActionPerformed(evt);
            }
        });

        foodLabel.setText("Department:");

        foodLabel1.setText("Designation:");

        depositLabel.setText("Staff Name:");

        depositLabel1.setText("Staff ID:");

        salField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        salField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salFieldActionPerformed(evt);
            }
        });

        foodLabel2.setText("Monthly Salary:");

        amtDue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amtDue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amtDueActionPerformed(evt);
            }
        });

        dueLab.setText("Amount Due");

        lastLab.setText("Due Date:");

        lastDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        payLab.setText("Pay Salary:");

        payField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        payField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payFieldActionPerformed(evt);
            }
        });
        payField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                payFieldKeyReleased(evt);
            }
        });

        foodLabel5.setText("Join Date:");

        jLabel3.setText("/");

        jLabel4.setText("/");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(foodLabel)
                            .addComponent(depositLabel)
                            .addComponent(depositLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(desigField)
                            .addComponent(dptBox, 0, 135, Short.MAX_VALUE)
                            .addComponent(nameField)
                            .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(dueLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(amtDue, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lastLab)
                        .addGap(46, 46, 46)
                        .addComponent(lastDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(payLab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(payField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(foodLabel1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(foodLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(salField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(foodLabel5)
                        .addGap(44, 44, 44)
                        .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yy)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(depositLabel1)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(depositLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodLabel)
                    .addComponent(dptBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desigField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foodLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodLabel2)
                    .addComponent(salField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(foodLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amtDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dueLab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lastLab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastDate, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payLab)
                    .addComponent(payField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        payBtn.setText("Pay");
        payBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(clearBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(remBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(srcBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(payBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(remBtn)
                    .addComponent(clearBtn)
                    .addComponent(updBtn)
                    .addComponent(srcBtn)
                    .addComponent(payBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout pagePanelLayout = new javax.swing.GroupLayout(pagePanel);
        pagePanel.setLayout(pagePanelLayout);
        pagePanelLayout.setHorizontalGroup(
            pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(dashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(routine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(room)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kitchen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(report)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(staff)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pagePanelLayout.setVerticalGroup(
            pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kitchen, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bill)
                        .addComponent(report)
                        .addComponent(fee)
                        .addComponent(staff))
                    .addGroup(pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dashboard)
                        .addComponent(routine)
                        .addComponent(room)
                        .addComponent(rent))
                    .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
String url = "jdbc:sqlserver://192.168.0.98:1433;databaseName=hostel;integratedSecurity=true";
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        amtDue.setEnabled(false);
        payField.setEnabled(false);
        
        ImageIcon icon=new ImageIcon("images/login.png");
        Image img=icon.getImage();
        Image newimg=img.getScaledInstance(24, 22, java.awt.Image.SCALE_SMOOTH);
        ImageIcon finale=new ImageIcon(newimg);
        profile.setIcon(finale);
        
        LocalDate ld=LocalDate.now();
        dd.setText(Integer.toString(ld.getDayOfMonth()));
        mm.setText(Integer.toString(ld.getMonthValue()));
        yy.setText(Integer.toString(ld.getYear()));
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt = con.createStatement();
                
                String get="SELECT * FROM department";
                ResultSet rs=stmt.executeQuery(get);
                while(rs.next())
                {
                    dptBox.addItem(rs.getString("dpt"));
                }
                
                String id="SELECT max(id) AS big FROM staff";
                ResultSet rid=stmt.executeQuery(id);
                if(rid.next())
                {
                    idField.setText(Integer.toString(rid.getInt("big")+1));
                }
                
                //////////////////////////////////////////
                
                ArrayList sid=new ArrayList();
                ArrayList sal=new ArrayList();
                int count=0;
                
                LocalDate today=LocalDate.now();    
                ArrayList<LocalDate> g=new ArrayList();
                ArrayList<LocalDate> i=new ArrayList();
                ArrayList<LocalDate> due=new ArrayList();
                
                String update="SELECT * FROM staff";
                ResultSet rup=stmt.executeQuery(update);
                while(rup.next())
                {
                    count++;
                    if(rup.getDate("lastPaid")!=null)
                    {
                        g.add(rup.getDate("lastPaid").toLocalDate());
                        i.add(rup.getDate("lastPaid").toLocalDate().plusDays(30));
                        sal.add(rup.getInt("salary"));
                        sid.add(rup.getInt("id"));
                        due.add(rup.getDate("lastPaid").toLocalDate());
                    }
                    else
                    {
                        g.add(rup.getDate("joinDate").toLocalDate());
                        i.add(rup.getDate("joinDate").toLocalDate().plusDays(30));
                        sal.add(rup.getInt("salary"));
                        sid.add(rup.getInt("id"));
                        due.add(null);
                    }
                }
                
                for(int k=0;k<count;k++)
                {
                    if(due.get(k)!=null)
                    {
                        //LocalDate it=due.get(k).plusDays(30); == i.get(k) == due.get(k)+30days
                        //System.out.println(it+" ____ "+i.get(k)+" ____ "+due.get(k));
                        if(i.get(k).isBefore(today))
                        {
                            String a="UPDATE staff SET lastPaid='"+i.get(k)+"' WHERE id='"+sid.get(k)+"'";
                            int b=stmt.executeUpdate(a);
                            if(b==1)
                            {   System.out.println("Updated."); }

                            String f="UPDATE staff SET amtDue=amtDue+'"+sal.get(k)+"' WHERE id='"+sid.get(k)+"'";
                            int c=stmt.executeUpdate(f);
                            if(c==1)
                            {   System.out.println("Update"); }
                        }
                    }
                    else
                    {
                        if(i.get(k).isBefore(today))
                        {
                            String a="UPDATE staff SET lastPaid='"+i.get(k)+"' WHERE id='"+sid.get(k)+"'";
                            int b=stmt.executeUpdate(a);
                            if(b==1)
                            {   System.out.println("Updated."); }
                            
                            //System.out.print("in");
                            String f="UPDATE staff SET amtDue=amtDue+'"+sal.get(k)+"' WHERE id='"+sid.get(k)+"'";
                            int c=stmt.executeUpdate(f);
                            if(c==1)
                            {   System.out.println("Update"); }
                        }
                    }
                }
                //////////////////////////////////////////
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
    }//GEN-LAST:event_formComponentShown

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        // TODO add your handling code here:
        new LoginPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_profileMouseClicked

    private void dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardMouseClicked
        // TODO add your handling code here:
        new Dashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_dashboardMouseClicked

    private void routineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_routineMouseClicked
        // TODO add your handling code here:
        new RoutineCheck().setVisible(true);
        dispose();
    }//GEN-LAST:event_routineMouseClicked

    private void roomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomMouseClicked
        // TODO add your handling code here:
        new RoomDistribution().setVisible(true);
        dispose();
    }//GEN-LAST:event_roomMouseClicked

    private void rentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rentMouseClicked
        // TODO add your handling code here:
        new RentPayment().setVisible(true);
        dispose();
    }//GEN-LAST:event_rentMouseClicked

    private void kitchenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kitchenMouseClicked
        // TODO add your handling code here:
        new KitchenMaterials().setVisible(true);
        dispose();
    }//GEN-LAST:event_kitchenMouseClicked

    private void reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportMouseClicked
        // TODO add your handling code here:
        new Reports().setVisible(true);
        dispose();
    }//GEN-LAST:event_reportMouseClicked

    private void billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billMouseClicked
        // TODO add your handling code here:
        new BillPayment().setVisible(true);
        dispose();
    }//GEN-LAST:event_billMouseClicked

    private void feeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feeMouseClicked
        // TODO add your handling code here:
        new Fees().setVisible(true);
        dispose();
    }//GEN-LAST:event_feeMouseClicked

    private void staffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_staffMouseClicked

    private void srcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcBtnActionPerformed
        // TODO add your handling code here:
        //amtDue.setEnabled(true);
        idField.setEnabled(false);
        payField.setEnabled(true);
        dd.setEnabled(false);
        mm.setEnabled(false);
        yy.setEnabled(false);
        nameField.setEnabled(false);
        LocalDate today=LocalDate.now();
        if(idField.getText().isEmpty())
        {
            amtDue.setEnabled(true);
            payField.setEnabled(true);
            if(nameField.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(pagePanel, "Enter id or name to search");
            }
            else
            {
                //search by name
                String search="SELECT * FROM staff WHERE name='"+nameField.getText()+"'";
                try
                {
                    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                    Connection con = DriverManager.getConnection(url);
                    Statement stmt = con.createStatement();

                    int id=0, dpt=0, salary=0, due=0;
                    String desig="";
                    LocalDate lst=null;
                    
                    LocalDate ld=null;
                    ResultSet res=stmt.executeQuery(search);
                    if(res.next())
                    {
                        id=res.getInt("id");
                        dpt=res.getInt("dpt");
                        desig=res.getString("desig");
                        salary=res.getInt("salary");
                        ld=res.getDate("joinDate").toLocalDate();
                        due=res.getInt("amtDue");
                        if(res.getDate("lastPaid")!=null)
                        {
                            lst=res.getDate("lastPaid").toLocalDate();
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(pagePanel, "No results found");
                        new Staff().setVisible(true);
                        dispose();
                    }
                    String find="SELECT * FROM department WHERE sr='"+dpt+"'";
                    ResultSet rf=stmt.executeQuery(find);
                    if(rf.next())
                    {
                        dptBox.setSelectedItem(rf.getString("dpt"));
                        idField.setText(Integer.toString(id));
                        desigField.setText(desig);
                        salField.setText(Integer.toString(salary));
                        dd.setText(Integer.toString(ld.getDayOfMonth()));
                        mm.setText(Integer.toString(ld.getMonthValue()));
                        yy.setText(Integer.toString(ld.getYear()));
                        amtDue.setText(Integer.toString(due));
                        if(lst!=null)
                        {
                            lastDate.setText(lst.getDayOfMonth()+" / "+lst.getMonthValue()+" / "+lst.getYear());
                            if(lst.isBefore(today) && Integer.parseInt(amtDue.getText())>0)
                            {
                                Font f=new Font("Sans Serif",Font.BOLD,16);
                                lastDate.setFont(f);
                                lastDate.setForeground(Color.red);
                            }
                        }
                    }
                    
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
            }
        }
        else
        {
            //search by id
            String search="SELECT * FROM staff WHERE id='"+idField.getText()+"'";
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt = con.createStatement();

                int dpt=0, salary=0, due=0;
                String desig="", name="";
                LocalDate lst=null;
                LocalDate ld=null;
                ResultSet res=stmt.executeQuery(search);
                if(res.next())
                {
                    name=res.getString("name");
                    dpt=res.getInt("dpt");
                    desig=res.getString("desig");
                    salary=res.getInt("salary");
                    ld=res.getDate("joinDate").toLocalDate();
                        due=res.getInt("amtDue");
                        if(res.getDate("lastPaid")!=null)
                        {
                            lst=res.getDate("lastPaid").toLocalDate();
                        }
                }
                else
                    {
                        JOptionPane.showMessageDialog(pagePanel, "No results found");
                        new Staff().setVisible(true);
                        dispose();
                    }
                String find="SELECT * FROM department WHERE sr='"+dpt+"'";
                ResultSet rf=stmt.executeQuery(find);
                if(rf.next())
                {
                    dptBox.setSelectedItem(rf.getString("dpt"));
                    nameField.setText(name);
                    desigField.setText(desig);
                    salField.setText(Integer.toString(salary));
                    dd.setText(Integer.toString(ld.getDayOfMonth()));
                    mm.setText(Integer.toString(ld.getMonthValue()));
                    yy.setText(Integer.toString(ld.getYear()));
                    amtDue.setText(Integer.toString(due));
                    if(lst!=null)
                    {
                        lastDate.setText(lst.getDayOfMonth()+" / "+lst.getMonthValue()+" / "+lst.getYear());
                        if(lst.isBefore(today) && Integer.parseInt(amtDue.getText())>0)
                            {
                                Font f=new Font("Sans Serif",Font.BOLD,16);
                                lastDate.setFont(f);
                                lastDate.setForeground(Color.red);
                            }
                    }
                }
                    
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_srcBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        // TODO add your handling code here:
        idField.setText("");
        nameField.setText("");
        dptBox.setSelectedIndex(0);
        desigField.setText("");
        salField.setText("");
        LocalDate l=LocalDate.now();
        dd.setText(Integer.toString(l.getDayOfMonth()));
        mm.setText(Integer.toString(l.getMonthValue()));
        yy.setText(Integer.toString(l.getYear()));
        amtDue.setText("");
        lastDate.setText("");
        payField.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void updBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updBtnActionPerformed
        // TODO add your handling code here:
        if(idField.getText().isEmpty() || nameField.getText().isEmpty() || desigField.getText().isEmpty() || salField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(pagePanel, "All Fields are required");
        }
        else
        {
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt = con.createStatement();

                int exist=0;
                String b="SELECT * FROM staff where id='"+idField.getText()+"'";
                ResultSet rb=stmt.executeQuery(b);
                if(rb.next())
                {
                    exist=1;
                }
                if(exist==1)
                {
                    int dptNo=0;
                    String dpt="SELECT * FROM department WHERE dpt='"+dptBox.getSelectedItem()+"'";
                    ResultSet rdp=stmt.executeQuery(dpt);
                    if(rdp.next())
                    {
                        dptNo=rdp.getInt("sr");
                    }
                    String up="UPDATE staff SET name='"+nameField.getText()+"', amtDue='"+amtDue.getText()+"',dpt='"+dptNo+"', desig='"+desigField.getText()+"', salary='"+salField.getText()+"', joinDate='"+yy.getText()+"-"+mm.getText()+"-"+dd.getText()+"' WHERE id='"+idField.getText()+"'";
                    int no=stmt.executeUpdate(up);
                    if(no==1)
                    {
                        System.out.println("Updated!");
                        new Staff().setVisible(true);
                        dispose();
                    }
                    else
                    {
                        System.out.println("Not Updated!");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(pagePanel, "There is no staff with that id!");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_updBtnActionPerformed

    private void remBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remBtnActionPerformed
        // TODO add your handling code here:
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection(url);
            Statement stmt = con.createStatement();

            int exist=0;
            String a="Select * from staff where id='"+idField.getText()+"'";
            ResultSet ra=stmt.executeQuery(a);
            if(ra.next())
            {
                exist=1;
            }
            if(exist==1)
            {
                String del="DELETE FROM staff WHERE id='"+idField.getText()+"'";
                int d=stmt.executeUpdate(del);
                if(d==1)
                {
                    System.out.println("Deleted!");
                    new Staff().setVisible(true);
                    dispose();
                }
                else
                {
                    System.out.println("Not Deleted!");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(pagePanel, "The staff with this ID doesn't exist");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_remBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        if(idField.getText().isEmpty() || nameField.getText().isEmpty() || desigField.getText().isEmpty() || salField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(pagePanel, "All Fields are required");
        }
        else
        {
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt = con.createStatement();
                String dpt="SELECT * FROM department WHERE dpt='"+dptBox.getSelectedItem()+"'";
                ResultSet r=stmt.executeQuery(dpt);
                int d=0;
                if(r.next())
                {
                    d=r.getInt("sr");
                }

                int exist=0;
                String a="Select * from staff where id='"+idField.getText()+"'";
                ResultSet ra=stmt.executeQuery(a);
                if(ra.next())
                {
                    exist=1;
                }
                if(exist==0)
                {
                    String add="INSERT INTO staff(id, name, dpt, desig, salary, amtDue, joinDate) values('"+idField.getText()+"','"+nameField.getText()+"','"+d+"','"+desigField.getText()+"','"+salField.getText()+"', '0', '"+yy.getText()+"-"+mm.getText()+"-"+dd.getText()+"')";
                    int z=stmt.executeUpdate(add);
                    if(z==1)
                    {
                        System.out.println("Insert Successfull");
                        new Staff().setVisible(true);
                        dispose();
                    }
                    else
                    {
                        System.out.println("Error");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(pagePanel, "The ID is already taken!");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void salFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salFieldActionPerformed

    private void desigFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desigFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_desigFieldActionPerformed

    private void idFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldActionPerformed

    private void amtDueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amtDueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amtDueActionPerformed

    private void payFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payFieldActionPerformed

    private void payFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_payFieldKeyReleased
        // TODO add your handling code here:
        if(payField.getText().matches("[0-9]{2,}"))
        {
            //numeric payent
        }
    }//GEN-LAST:event_payFieldKeyReleased

    private void payBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBtnActionPerformed
        // TODO add your handling code here:
        if(idField.getText().isEmpty() || nameField.getText().isEmpty() || desigField.getText().isEmpty() 
                || salField.getText().isEmpty() || !payField.getText().matches("[0-9]{2,}"))
        {
            JOptionPane.showMessageDialog(pagePanel, "Invalid field entries!");
        }
        else
        {
            int amt=Integer.parseInt(payField.getText());
            int left=Integer.parseInt(amtDue.getText())-amt;
            
            String pay="UPDATE staff SET amtDue=amtDue-'"+amt+"' WHERE id='"+idField.getText()+"'";
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt = con.createStatement();
                
                int p=stmt.executeUpdate(pay);
                if(p>0)
                {
                    int reply=JOptionPane.showConfirmDialog(rootPane, "Salary Successfully Paid. Print a receipt?", "heading", JOptionPane.YES_NO_OPTION);
                    if(reply==JOptionPane.YES_OPTION)
                    {
                        BufferedWriter bw = null;
                                         String mycontent = 
                                                           "|Staff ID.:     |  "+idField.getText()+"\n"
                                                         + "|Name:          |  "+nameField.getText()+"\n"
                                                         + "|Designation:   |  "+dptBox.getSelectedItem()+"- "+desigField.getText()+"\n"
                                                         + "|Amount paid:   |  "+amt+"\n"
                                                         + "|Payment method:|  Cash/Card"+"\n"
                                                         + "|Paid on:       |  "+LocalDate.now()+"\n"
                                                         + "|Amount Due     |  "+left;
                                        System.out.println(mycontent);
                                        try
                                        {
                                         //Specify the file name and path here
                                            File file = new File("D:/bill.doc");
                                         /* This logic will make sure that the file 
                                          * gets created if it is not present at the
                                          * specified location*/
                                            if (!file.exists()) {
                                               file.createNewFile();
                                            }

                                            FileWriter fw = new FileWriter(file);
                                            bw = new BufferedWriter(fw);
                                            bw.write(mycontent);
                                            JOptionPane.showMessageDialog(pagePanel, "The bill is written successfully to D:\bill.doc");
                                        }
                                        catch (IOException e)
                                        {
                                            System.err.println("Error: " + e.getMessage());
                                        }
                                        finally
                                        { 
                                           try{
                                              if(bw!=null)
                                                 bw.close();
                                           }catch(Exception ex){
                                               System.out.println("Error in closing the BufferedWriter"+ex);
                                            }
                                        }
                                new Staff().setVisible(true);
                                dispose();        
                    }
                    else
                    {
                        new Staff().setVisible(true);
                        dispose();
                    }
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_payBtnActionPerformed

    private void idFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFieldKeyReleased
        // TODO add your handling code here:
    /*    if(idField.getText().length()==0)
        {
            if(!nameField.getText().isEmpty())
            {
                nameField.setText("");
            }
        }   */
    }//GEN-LAST:event_idFieldKeyReleased

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1ComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField amtDue;
    private javax.swing.JLabel bill;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel dashboard;
    private javax.swing.JTextField dd;
    private javax.swing.JLabel depositLabel;
    private javax.swing.JLabel depositLabel1;
    private javax.swing.JTextField desigField;
    private javax.swing.JComboBox dptBox;
    private javax.swing.JLabel dueLab;
    private javax.swing.JLabel fee;
    private javax.swing.JLabel foodLabel;
    private javax.swing.JLabel foodLabel1;
    private javax.swing.JLabel foodLabel2;
    private javax.swing.JLabel foodLabel5;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel kitchen;
    private javax.swing.JLabel lastDate;
    private javax.swing.JLabel lastLab;
    private javax.swing.JTextField mm;
    private javax.swing.JTextField nameField;
    private javax.swing.JPanel pagePanel;
    private javax.swing.JButton payBtn;
    private javax.swing.JTextField payField;
    private javax.swing.JLabel payLab;
    private javax.swing.JLabel profile;
    private javax.swing.JButton remBtn;
    private javax.swing.JLabel rent;
    private javax.swing.JLabel report;
    private javax.swing.JLabel room;
    private javax.swing.JLabel routine;
    private javax.swing.JTextField salField;
    private javax.swing.JButton srcBtn;
    private javax.swing.JLabel staff;
    private javax.swing.JButton updBtn;
    private javax.swing.JTextField yy;
    // End of variables declaration//GEN-END:variables
}
