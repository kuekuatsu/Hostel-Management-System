
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ridisha Shetty
 */
public class RoutineCheck extends javax.swing.JFrame {

    /**
     * Creates new form RoutineCheck
     */
    public RoutineCheck() {
        initComponents();
        Point center = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
        int windowWidth = this.getWidth();
        int windowHeight = this.getHeight();
        this.setBounds(center.x - windowWidth / 2, center.y - windowHeight / 2, windowWidth,
            windowHeight);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pagePanel = new javax.swing.JPanel();
        routine = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        roomField = new javax.swing.JTextField();
        mobileField = new javax.swing.JTextField();
        checkout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rentStatus = new javax.swing.JTextField();
        checkin = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rent = new javax.swing.JLabel();
        room = new javax.swing.JLabel();
        dashboard = new javax.swing.JLabel();
        flag = new javax.swing.JLabel();
        kitchen = new javax.swing.JLabel();
        bill = new javax.swing.JLabel();
        reports = new javax.swing.JLabel();
        profile = new javax.swing.JLabel();
        fee = new javax.swing.JLabel();
        staff = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ROUTINE CHECK");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        pagePanel.setBackground(new java.awt.Color(238, 255, 237));
        pagePanel.setPreferredSize(new java.awt.Dimension(724, 345));
        pagePanel.setRequestFocusEnabled(false);

        routine.setFont(new java.awt.Font("Yu Gothic", 1, 12)); // NOI18N
        routine.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        routine.setText("Routine Check");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 0), null, null, new java.awt.Color(0, 102, 0)));

        jLabel3.setText("Room no:");

        jLabel4.setText("Rent:");

        jLabel5.setText("Mobile no:");

        roomField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roomFieldKeyReleased(evt);
            }
        });

        checkout.setBackground(new java.awt.Color(255, 255, 255));
        checkout.setForeground(new java.awt.Color(0, 102, 0));
        checkout.setText("Checkout");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        jLabel2.setText("Resident Name:");

        checkin.setBackground(new java.awt.Color(255, 255, 255));
        checkin.setForeground(new java.awt.Color(0, 102, 0));
        checkin.setText("Checkin");
        checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinActionPerformed(evt);
            }
        });

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Yu Gothic Light", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ROUTINE CHECK");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(57, 57, 57))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkin)
                .addGap(58, 58, 58))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkin)
                    .addComponent(checkout))
                .addContainerGap())
        );

        rent.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        rent.setForeground(new java.awt.Color(0, 51, 255));
        rent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rent.setText("Rent Payment");
        rent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rentMouseClicked(evt);
            }
        });

        room.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        room.setForeground(new java.awt.Color(0, 51, 255));
        room.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        room.setText("Room Distribution");
        room.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomMouseClicked(evt);
            }
        });

        dashboard.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        dashboard.setForeground(new java.awt.Color(0, 51, 255));
        dashboard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashboard.setText("Dashboard");
        dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardMouseClicked(evt);
            }
        });

        flag.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        flag.setText("No Red Flags");
        flag.setFocusable(false);
        flag.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        flag.setIconTextGap(1);
        flag.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                flagComponentAdded(evt);
            }
        });
        flag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flagMouseClicked(evt);
            }
        });
        flag.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                flagComponentShown(evt);
            }
        });

        kitchen.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        kitchen.setForeground(new java.awt.Color(0, 51, 255));
        kitchen.setText("Kitchen Materials");
        kitchen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kitchenMouseClicked(evt);
            }
        });

        bill.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        bill.setForeground(new java.awt.Color(0, 51, 255));
        bill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bill.setText("Pay Bill");
        bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billMouseClicked(evt);
            }
        });

        reports.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        reports.setForeground(new java.awt.Color(0, 51, 255));
        reports.setText("Add Reports");
        reports.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsMouseClicked(evt);
            }
        });

        profile.setPreferredSize(new java.awt.Dimension(34, 14));
        profile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profileMouseClicked(evt);
            }
        });

        fee.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        fee.setForeground(new java.awt.Color(0, 51, 255));
        fee.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fee.setText("Fee Details");
        fee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feeMouseClicked(evt);
            }
        });

        staff.setFont(new java.awt.Font("Yu Gothic", 0, 12)); // NOI18N
        staff.setForeground(new java.awt.Color(0, 51, 255));
        staff.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        staff.setText("Staff Manage");
        staff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                staffMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pagePanelLayout = new javax.swing.GroupLayout(pagePanel);
        pagePanel.setLayout(pagePanelLayout);
        pagePanelLayout.setHorizontalGroup(
            pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(flag)
                .addGap(20, 20, 20))
            .addGroup(pagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(routine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(room)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kitchen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bill)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reports)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fee)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(staff)
                .addGap(10, 10, 10))
        );
        pagePanelLayout.setVerticalGroup(
            pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(routine)
                        .addComponent(rent)
                        .addComponent(kitchen)
                        .addComponent(dashboard)
                        .addComponent(room)
                        .addComponent(bill)
                        .addComponent(reports)
                        .addComponent(fee)
                        .addComponent(staff))
                    .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(flag)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pagePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String url = "jdbc:sqlserver://192.168.0.98:1433;databaseName=hostel;integratedSecurity=true";
    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void roomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomMouseClicked
        // TODO add your handling code here:
                new RoomDistribution().setVisible(true);
                dispose();
    }//GEN-LAST:event_roomMouseClicked

    private void rentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rentMouseClicked
        // TODO add your handling code here:
        rent.addMouseListener(new MouseAdapter(){
           public void mouseClicked(MouseEvent e)
           {
               new RentPayment().setVisible(true);
               dispose();
           }
        });
    }//GEN-LAST:event_rentMouseClicked

    private void roomFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomFieldKeyReleased
        // TODO add your handling code here:
        String room[]=roomField.getText().split("");
        if(roomField.getText().length()==4)
        {
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt=con.createStatement();
                int studId=0;

                String s="SELECT * FROM resident WHERE floorNo='"+room[0]+"' AND fLatNo='"+room[2]+"' AND person='"+room[3]+"'";
                ResultSet rs=stmt.executeQuery(s);
                if(rs.next())
                {
                    if(rs.getLong("mobile")!=0)
                    {
                        studId=rs.getInt("srNo");
                        nameField.setText(rs.getString("name"));
                        rentStatus.setText(Integer.toString(rs.getInt("rent")));
                        mobileField.setText(Long.toString(rs.getLong("mobile")));
                    }
                }
                
                String ab="SELECT * FROM redFlags WHERE studentID='"+studId+"'";
                //System.out.println("SELECT * FROM redFlags WHERE studentID='"+studId+"'");
                int count=0;
                LocalTime lt_in;
                LocalDate ld_in, ld_out;
                LocalTime ten=LocalTime.parse("22:00:00");
                
                ResultSet rab=stmt.executeQuery(ab);
                
                while(rab.next())
                {
                    if(rab.getObject("checkOut")!=null && rab.getObject("checkIn")!=null)
                    {
                        lt_in=rab.getTime("checkIn").toLocalTime();
                        ld_in=rab.getDate("checkIn").toLocalDate();
                        ld_out=rab.getDate("checkOut").toLocalDate();

                        if(lt_in.isAfter(ten) || ld_in.isAfter(ld_out))
                        {
                            count++;
                        }
                    }
                }
                //System.out.println(count);
                    if(count>=3)
                    {
                        checkout.setEnabled(false);
                        checkin.setEnabled(false);
                        flag.setText(Integer.toString(count));
                        flag.setForeground(Color.red);
                        Font f=new Font("SansSerif", Font.BOLD, 16);
                        flag.setFont(f);

                        ImageIcon icon=new ImageIcon("images/redFlag.png");
                        Image img=icon.getImage();
                        Image newimg=img.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH);
                        ImageIcon finale=new ImageIcon(newimg);
                        flag.setIcon(finale);
                        
                        JOptionPane.showMessageDialog(rootPane, "Red Flags exceeded");
                    }
                    else if(count>0)
                    {
                        flag.setText(Integer.toString(count));
                        flag.setForeground(Color.red);
                        Font f=new Font("SansSerif", Font.BOLD, 16);
                        flag.setFont(f);

                        ImageIcon icon=new ImageIcon("images/redFlag.png");
                        Image img=icon.getImage();
                        Image newimg=img.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH);
                        ImageIcon finale=new ImageIcon(newimg);
                        flag.setIcon(finale);
                    }
                    else
                    {
                        flag.setText("No Red Flags");
                        flag.setForeground(Color.black);
                        Font f=new Font("Tahoma", Font.PLAIN, 12);
                        flag.setFont(f);

                        ImageIcon icon=null;
                        flag.setIcon(icon);
                    }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        else
        {
            nameField.setText("");
            rentStatus.setText("");
            mobileField.setText("");
        }
    }//GEN-LAST:event_roomFieldKeyReleased

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
        // TODO add your handling code here:
        if(roomField.getText().matches("[1-3]0[1-3][a-d]|40[1-3][a-c]|50[1-3][ab]|[6-7]0[1-3]a"))
        {
            LocalDateTime out=LocalDateTime.now();
            String split[]=roomField.getText().split("");
            //System.out.print(current);
            try{
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt=con.createStatement();
                int id=0;
                String look="SELECT srNo FROM resident WHERE floorNo='"+split[0]+"' AND flatNo='"+split[2]+"' AND person='"+split[3]+"' AND houseStatus='1'";
                ResultSet r=stmt.executeQuery(look);
                if(r.next())
                {
                    id=r.getInt("srNo");
                }
                if(id!=0)
                {
                    String go="SELECT * FROM redFlags WHERE studentID='"+id+"' AND checkIn is NULL";
                    ResultSet result=stmt.executeQuery(go);
                    if(result.next())
                    {
                        JOptionPane.showMessageDialog(pagePanel, "Did not check in last time!");
                    }
                    else
                    {
                        String sql="INSERT INTO redFlags(studentId,checkOut) VALUES('"+id+"','"+out+"')";
                        int num=stmt.executeUpdate(sql);
                        if(num>0)
                        {
                            JOptionPane.showMessageDialog(rootPane, "Checked out!");
                            roomField.setText("");
                            nameField.setText("");
                            rentStatus.setText("");
                            mobileField.setText("");
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "Error Occurred");
                        }
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(pagePanel, "Room is empty");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(pagePanel, "This room is not occupied");
        }
    }//GEN-LAST:event_checkoutActionPerformed

    private void checkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinActionPerformed
        // TODO add your handling code here:
        if(roomField.getText().matches("[1-3]0[1-3][a-d]|40[1-3][a-c]|50[1-3][ab]|[6-7]0[1-3]a"))
        {
            LocalDateTime in=LocalDateTime.now();
            String split[]=roomField.getText().split("");
            //System.out.print(current);
            try{
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection(url);
                Statement stmt=con.createStatement();
                int id=0;
                String look="SELECT srNo FROM resident WHERE floorNo='"+split[0]+"' AND flatNo='"+split[2]+"' AND person='"+split[3]+"' AND houseStatus='1'";
                ResultSet res=stmt.executeQuery(look);
                if(res.next())
                {
                    id=res.getInt("srNo");
                }
                if(id!=0)
                {
                    String sql="UPDATE redFlags SET checkIn='"+in+"' WHERE studentId='"+id+"' and checkIn is null";
                    int num=stmt.executeUpdate(sql);
                    if(num>0)
                    {
                        JOptionPane.showMessageDialog(rootPane, "Checked in!");
                        roomField.setText("");
                        nameField.setText("");
                        rentStatus.setText("");
                        mobileField.setText("");
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Did not check out last time!");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(pagePanel, "This room is not occupied");
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(pagePanel, "Invalid room no.");
        }
    }//GEN-LAST:event_checkinActionPerformed

    private void flagComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_flagComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_flagComponentShown

    private void flagComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_flagComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_flagComponentAdded

    private void flagMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flagMouseClicked
        // TODO add your handling code here:
        //Red Flags Page Open
        new RedFlag().setVisible(true);
        dispose();
    }//GEN-LAST:event_flagMouseClicked

    private void kitchenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kitchenMouseClicked
        // TODO add your handling code here:
        new KitchenMaterials().setVisible(true);
        dispose();
    }//GEN-LAST:event_kitchenMouseClicked

    private void dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardMouseClicked
        // TODO add your handling code here:
        new Dashboard().setVisible(true);
        dispose();
    }//GEN-LAST:event_dashboardMouseClicked

    private void billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billMouseClicked
        // TODO add your handling code here:
        new BillPayment().setVisible(true);
        dispose();
    }//GEN-LAST:event_billMouseClicked

    private void reportsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsMouseClicked
        // TODO add your handling code here:
        new Reports().setVisible(true);
        dispose();
    }//GEN-LAST:event_reportsMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        ImageIcon icon=new ImageIcon("images/login.png");
        Image img=icon.getImage();
        Image newimg=img.getScaledInstance(24, 22, java.awt.Image.SCALE_SMOOTH);
        ImageIcon finale=new ImageIcon(newimg);
        profile.setIcon(finale);
    }//GEN-LAST:event_formComponentShown

    private void profileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profileMouseClicked
        // TODO add your handling code here:
        new LoginPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_profileMouseClicked

    private void feeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feeMouseClicked
        // TODO add your handling code here:
        new Fees().setVisible(true);
        dispose();
    }//GEN-LAST:event_feeMouseClicked

    private void staffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_staffMouseClicked
        // TODO add your handling code here:
        new Staff().setVisible(true);
        dispose();
    }//GEN-LAST:event_staffMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoutineCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoutineCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoutineCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoutineCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoutineCheck().setVisible(true);
            }
        });
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bill;
    private javax.swing.JButton checkin;
    private javax.swing.JButton checkout;
    private javax.swing.JLabel dashboard;
    private javax.swing.JLabel fee;
    private javax.swing.JLabel flag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel kitchen;
    private javax.swing.JTextField mobileField;
    private javax.swing.JTextField nameField;
    private javax.swing.JPanel pagePanel;
    private javax.swing.JLabel profile;
    private javax.swing.JLabel rent;
    private javax.swing.JTextField rentStatus;
    private javax.swing.JLabel reports;
    private javax.swing.JLabel room;
    private javax.swing.JTextField roomField;
    private javax.swing.JLabel routine;
    private javax.swing.JLabel staff;
    // End of variables declaration//GEN-END:variables
}
